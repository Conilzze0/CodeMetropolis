name: Maven CI

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'feature/*'
  pull_request:
    branches:
      - 'master'
      - 'develop'
      - 'feature/*'

jobs:
  maven-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B verify -Pcheckstyle-skip --file sources/pom.xml

  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Find modified Java files
        id: find_changes
        run: |
          cd sources/
          base_branch="${{ github.event.pull_request.base.ref }}"
          head_branch="${{ github.event.pull_request.head.ref }}"
          git fetch origin "${base_branch}:${base_branch}"
          git fetch origin "${head_branch}:${head_branch}"
          git diff --name-only "${base_branch}"..."${head_branch}" -- '*.java' > changed_files.txt
          echo "::set-output name=changed_files::$(cat changed_files.txt)"
      - name: Run Checkstyle on modified Java files
        if: steps.find_changes.outputs.changed_files != ''
        run: |
          cd sources/
          modified_files=$(<changed_files.txt)
          if [[ -n $modified_files ]]; then
            while IFS= read -r file; do
              mvn checkstyle:check -Dcheckstyle.includes="**/$(basename "$file")"
            checkstyle_exit_code=$?
            if [[ $checkstyle_exit_code -ne 0 ]]; then
              echo "Checkstyle violations detected, please fix them!"
              exit 1
            fi
          done <<< "$modified_files"
          fi          

  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify -Pcheckstyle-skip --file sources/pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Conilzze0_CodeMetropolis

  run-python-script:
    runs-on: ubuntu-latest
    needs: maven-build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
        working-directory: ./sources/test
      - name: Clean package
        run: |
          cd sources/
          mvn clean package -Pcheckstyle-skip -DskipTests
          cd ..
      - name: Run Python Script
        run: |
          python 'CodeMetropolis Tester.py' testFiles/converter inputs/converterInput.graph expected/converterExpected.xml output/ --type SourceMeter --parameters None
          python 'CodeMetropolis Tester.py' testFiles/mapping output/converterToMapping.xml expected/mappingExpected.xml output/ --mapping_file_path mapping_examples/sourcemeter_mapping_example_2_0.xml
          python 'CodeMetropolis Tester.py' testFiles/placing output/mappingToPlacing.xml expected/placingExpected.xml output/
        #          python 'CodeMetropolis Tester.py' testFiles/rendering output/mappingToRendering.xml expected/level.dat output/
        working-directory: ./sources/test